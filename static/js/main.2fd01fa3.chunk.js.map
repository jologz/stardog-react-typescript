{"version":3,"sources":["helpers/routeHelpers.ts","components/Layout.tsx","helpers/compose.ts","helpers/stringHelpers.ts","envConfig.ts","queries/caseNumbersQuery.ts","reduxConfig/caseNumbers/types.ts","reduxConfig/caseNumbers/actions.ts","stardog/StardogContext.tsx","stardog/useQuery.ts","pages/HeatmapPage/index.tsx","pages/HomePage/components/CaseNumbersTable.tsx","pages/HomePage/index.tsx","mainRouting.tsx","pages/NotFoundPage/index.tsx","App.tsx","reduxConfig/appState.ts","reduxConfig/caseNumbers/reducers.ts","reduxConfig/configureStore.ts","configuration/baseThemeOverride.ts","pages/ForbiddenPage/index.tsx","configuration/RouterConfig.tsx","configuration/AppConfig.tsx","index.tsx"],"names":["routes","Layout","children","Container","maxWidth","composeCoupleFn","f","g","convertStringUndefinedToStringEmpty","stringToConvert","undefined","appendRouteMatchUrlToPath","matchUrl","path","map","thisPath","envConfig","googleApiKey","process","REACT_APP_GOOGLE_API_KEY","caseNumbersQuery","CaseNumbersDataUpdate","caseNumbersDataUpdateData","caseNumbersData","type","StardogContext","createContext","connection","dbName","StardogProvider","username","password","endpoint","Connection","Provider","value","useQuery","useContext","useState","loading","setLoading","error","setError","data","setData","useCallback","a","readQuery","query","execute","response","ok","status","statusText","bindings","body","results","HeatMapPage","useSelector","state","dispatch","useDispatch","runCaseNumbersQuery","positions","setPositions","useEffect","length","computedPositions","currentDataProp","idx","Object","keys","filter","currentKey","includes","reduce","accumObj","weight","Number","style","height","width","bootstrapURLKeys","key","libraries","defaultCenter","lat","lng","defaultZoom","heatmap","options","opacity","radius","CaseNumbersTable","rows","columns","Typography","component","HomePage","useMemo","field","headerName","caseNumbersRows","setCaseNumbersRows","updatedObj","id","toString","Link","RouterLink","to","mainRouting","exact","childComponent","routeMatchUrl","ChildComponent","computedPath","fns","reduceRight","pipe","NotFoundPage","App","rest","appReducer","combineReducers","action","middlewares","reduxImmutableStateInvariant","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","baseThemeOverride","responsiveFontSizes","createMuiTheme","typography","button","textTransform","ForbiddenPage","RouterConfig","location","useLocation","notFound","forbidden","store","AppConfig","CssBaseline","ThemeProvider","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fd01fa3.chunk.js","sourcesContent":["import { FC } from 'react'\nimport { pipe } from './compose'\nimport { convertStringUndefinedToStringEmpty } from './stringHelpers'\n\nexport interface RouteType {\n    path: string | string[]\n    exact: boolean\n    childComponent: FC\n}\n\nexport const appendRouteMatchUrlToPath = (matchUrl: string) => (\n    path: string | string[]\n) =>\n    typeof path === 'string'\n        ? matchUrl + path\n        : (path as string[]).map((thisPath) => matchUrl + thisPath)\n\nexport interface GenerateRoutesResponseProps {\n    exact: boolean\n    computedPath: string | string[]\n    key: string\n    ChildComponent: FC\n}\n\nexport const generateRoutes = (routes: RouteType[]) => (\n    routeMatchUrl?: string\n): GenerateRoutesResponseProps[] =>\n    routes.map(({ path, exact, childComponent: ChildComponent }, idx) => {\n        const computedPath = pipe(\n            convertStringUndefinedToStringEmpty,\n            appendRouteMatchUrlToPath\n        )(routeMatchUrl)(path)\n\n        return {\n            ChildComponent,\n            computedPath,\n            key: idx.toString(),\n            exact,\n        }\n    })\n","import Container from '@material-ui/core/Container'\nimport React, { FC } from 'react'\n\nconst Layout: FC = ({ children }) => {\n    return (\n        <Container maxWidth=\"xl\">\n            <>{children}</>\n        </Container>\n    )\n}\n\nexport default Layout\n","export const composeCoupleFn = (f: Function, g: Function) => (...args: any) =>\n    f(g(...args))\n\nexport const compose = (...fns: Function[]) => fns.reduce(composeCoupleFn)\n\nexport const pipe = (...fns: Function[]) => fns.reduceRight(composeCoupleFn)\n","export const convertStringUndefinedToStringEmpty = (stringToConvert?: string) =>\n    stringToConvert === undefined ? '' : stringToConvert\n","export const envConfig = {\n    googleApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n}\n","export const caseNumbersQuery = `PREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX p: <http://www.wikidata.org/prop/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX psv: <http://www.wikidata.org/prop/statement/value/>\nPREFIX wikibase: <http://wikiba.se/ontology#>\n\nSELECT ?countyName ?cases ?population ?percentCases ?lat ?lng\n{\n    # get the latest date\n    { SELECT (max(?d) as ?date) { ?r :date ?d } }\n\n    # get all the reports for the latest date\n    ?report\n        :cases ?cases  ;\n        :date ?date ;                \n        :county [\n            rdfs:label ?countyName ;\n            :fips ?fips\n        ]    \n\n    # Get coordinates of\n    SERVICE <https://query.wikidata.org/sparql> \n    {\n        SELECT * {\n            ?item wdt:P882 ?fips ;\n                  wdt:P1082 ?population ;\n                  p:P625 ?coordPoint .\n            ?coordPoint psv:P625 ?coord_node .\n            ?coord_node wikibase:geoLongitude ?lng ;\n                        wikibase:geoLatitude ?lat .\n        }\n    }   \n    # compute percentages\n    BIND(roundHalfToEven((?cases / ?population) * 100, 2) AS ?percentCases)\n}\nORDER BY desc(?percentCases)`\n","import { CaseNumbersDataKey } from 'pages/HomePage/components/CaseNumbersTable'\nimport { DataProps } from 'stardog/useQuery'\n\nexport const CaseNumbersDataUpdate = 'CaseNumbersDataUpdate'\n\nexport interface CaseNumbersDataUpdateAction {\n    type: typeof CaseNumbersDataUpdate\n    caseNumbersData: Record<CaseNumbersDataKey, DataProps>[]\n}\n\nexport type CaseNumbersDataActionTypes = CaseNumbersDataUpdateAction\n","import { CaseNumbersDataKey } from 'pages/HomePage/components/CaseNumbersTable'\nimport { DataProps } from 'stardog/useQuery'\nimport { CaseNumbersDataUpdate, CaseNumbersDataUpdateAction } from './types'\n\nexport const caseNumbersDataUpdateData = (\n    caseNumbersData: Record<CaseNumbersDataKey, DataProps>[]\n): CaseNumbersDataUpdateAction => ({\n    type: CaseNumbersDataUpdate,\n    caseNumbersData,\n})\n","import { createContext, FC } from 'react'\nimport { Connection } from 'stardog'\n\nexport interface StardogContextProps {\n    connection: Connection\n    dbName: string\n}\n\nexport const StardogContext = createContext<StardogContextProps>({\n    connection: {} as Connection,\n    dbName: '',\n})\n\nexport interface StardogProviderProps {\n    username: string\n    password: string\n    endpoint: string\n    dbName: string\n}\n\nexport const StardogProvider: FC<StardogProviderProps> = ({\n    username,\n    password,\n    endpoint,\n    dbName,\n    children,\n}) => {\n    const connection = new Connection({\n        username,\n        password,\n        endpoint,\n    })\n\n    return (\n        <StardogContext.Provider\n            value={{\n                connection,\n                dbName,\n            }}\n        >\n            {children}\n        </StardogContext.Provider>\n    )\n}\n","import { useCallback, useContext, useState } from 'react'\nimport { query } from 'stardog'\nimport { StardogContext, StardogContextProps } from './StardogContext'\n\nexport interface ErrorResponse {\n    status: number\n    statusText: string\n}\n\nexport interface DataProps {\n    datatype?: string\n    type: string\n    value: string\n}\n\nexport type RowDataType<TKey extends string> = Record<TKey, DataProps>\n\nexport interface UseQueryResultProps<TKey extends string> {\n    error?: ErrorResponse\n    loading: boolean\n    data: RowDataType<TKey>[] | null\n}\n\nexport interface RunQueryProps {\n    readQuery: string\n}\n\nexport const useQuery = <TKey extends string>(): [\n    (runQueryProps: RunQueryProps) => Promise<void>,\n    UseQueryResultProps<TKey>\n] => {\n    const { connection, dbName } = useContext<StardogContextProps>(\n        StardogContext\n    )\n    const [loading, setLoading] = useState<boolean>(false)\n    const [error, setError] = useState<ErrorResponse>()\n    const [data, setData] = useState<RowDataType<TKey>[] | null>(null)\n\n    const runQuery = useCallback(\n        async ({ readQuery }: RunQueryProps) => {\n            setLoading(true)\n            const response = await query.execute(connection, dbName, readQuery)\n\n            if (!response.ok) {\n                setError({\n                    status: response.status,\n                    statusText: response.statusText,\n                })\n                setLoading(false)\n                return\n            }\n\n            const { bindings } = response.body.results\n            setData(bindings as RowDataType<TKey>[])\n            setLoading(false)\n        },\n        [connection, dbName]\n    )\n\n    return [\n        runQuery,\n        {\n            error,\n            loading,\n            data,\n        },\n    ]\n}\n","import { envConfig } from 'envConfig'\nimport GoogleMapReact, { Coords, Position } from 'google-map-react'\nimport { CaseNumbersDataKey } from 'pages/HomePage/components/CaseNumbersTable'\nimport { caseNumbersQuery } from 'queries/caseNumbersQuery'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppState } from 'reduxConfig/appState'\nimport { caseNumbersDataUpdateData } from 'reduxConfig/caseNumbers/actions'\nimport { useQuery } from 'stardog/useQuery'\n\nconst HeatMapPage = () => {\n    const { caseNumbersData } = useSelector((state: AppState) => state)\n    const dispatch = useDispatch()\n    const [\n        runCaseNumbersQuery,\n        { loading, error, data },\n    ] = useQuery<CaseNumbersDataKey>()\n\n    const [positions, setPositions] = useState<Position[]>([])\n\n    const defaultCenter: Coords = {\n        lat: 39.8283,\n        lng: -98.5795,\n    }\n    const defaultZoom = 5\n\n    useEffect(() => {\n        if (!caseNumbersData.length) {\n            runCaseNumbersQuery({\n                readQuery: caseNumbersQuery,\n            })\n            return\n        }\n\n        const computedPositions = caseNumbersData.map(\n            (currentDataProp, idx) => {\n                const currentKeys = Object.keys(\n                    currentDataProp\n                ) as CaseNumbersDataKey[]\n\n                const position = currentKeys\n                    .filter((currentKey) =>\n                        ['lat', 'lng', 'percentCases'].includes(currentKey)\n                    )\n                    .reduce((accumObj: any, currentKey) => {\n                        if (currentKey === 'percentCases') {\n                            accumObj.weight = Number(\n                                currentDataProp[currentKey].value\n                            )\n                        } else {\n                            accumObj[currentKey] = Number(\n                                currentDataProp[currentKey].value\n                            )\n                        }\n                        return accumObj\n                    }, {}) as Position\n\n                return position\n            }\n        )\n        setPositions(computedPositions)\n    }, [runCaseNumbersQuery, caseNumbersData])\n\n    useEffect(() => {\n        if (!data) return\n        dispatch(caseNumbersDataUpdateData(data))\n    }, [data, dispatch])\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error getting data...</div>\n\n    return (\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{\n                    key: envConfig.googleApiKey ?? '',\n                    libraries: ['visualization'],\n                }}\n                defaultCenter={defaultCenter}\n                defaultZoom={defaultZoom}\n                heatmap={{\n                    positions,\n                    options: {\n                        opacity: 0.6,\n                        radius: 50,\n                    },\n                }}\n            ></GoogleMapReact>\n        </div>\n    )\n}\n\nexport default HeatMapPage\n","import { Typography } from '@material-ui/core'\nimport { ColDef, DataGrid, RowsProp } from '@material-ui/data-grid'\n\nexport type CaseNumbersDataKey =\n    | 'cases'\n    | 'countyName'\n    | 'percentCases'\n    | 'population'\n    | 'lat'\n    | 'lng'\n\nexport type RowPropType = 'id' | CaseNumbersDataKey\n\nexport interface CaseNumbersTableProps {\n    rows: RowsProp\n    columns: ColDef[]\n}\n\nconst CaseNumbersTable = ({ rows, columns }: CaseNumbersTableProps) => {\n    return (\n        <>\n            <Typography component=\"h2\">\n                COVID19 Counties With Most Cases\n            </Typography>\n            <div style={{ width: 1010, height: 600 }}>\n                <DataGrid rows={rows} columns={columns} />\n            </div>\n        </>\n    )\n}\n\nexport default CaseNumbersTable\n","import Link from '@material-ui/core/Link'\nimport { ColDef, RowsProp } from '@material-ui/data-grid'\nimport { caseNumbersQuery } from 'queries/caseNumbersQuery'\nimport { FC, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { AppState } from 'reduxConfig/appState'\nimport { caseNumbersDataUpdateData } from 'reduxConfig/caseNumbers/actions'\nimport { useQuery } from 'stardog/useQuery'\nimport CaseNumbersTable, {\n    CaseNumbersDataKey,\n    RowPropType,\n} from './components/CaseNumbersTable'\n\nconst HomePage: FC = () => {\n    const { caseNumbersData } = useSelector((state: AppState) => state)\n    const dispatch = useDispatch()\n    const [\n        runCaseNumbersQuery,\n        { loading, error, data },\n    ] = useQuery<CaseNumbersDataKey>()\n\n    const columns = useMemo(\n        (): ColDef[] => [\n            {\n                field: 'countyName' as CaseNumbersDataKey,\n                headerName: 'County Name',\n                width: 250,\n            },\n            {\n                field: 'percentCases' as CaseNumbersDataKey,\n                headerName: 'Percent Cases',\n                width: 150,\n            },\n            {\n                field: 'population' as CaseNumbersDataKey,\n                headerName: 'Population',\n                width: 150,\n            },\n            {\n                field: 'cases' as CaseNumbersDataKey,\n                headerName: 'Cases',\n                width: 150,\n            },\n            {\n                field: 'lat' as CaseNumbersDataKey,\n                headerName: 'Latitude',\n                width: 150,\n            },\n            {\n                field: 'lng' as CaseNumbersDataKey,\n                headerName: 'Longitude',\n                width: 150,\n            },\n        ],\n        []\n    )\n\n    const [caseNumbersRows, setCaseNumbersRows] = useState<RowsProp>([])\n\n    // extract only the values from DataProps\n    // and map it back to the CaseNumbersDataKey record.\n    useEffect(() => {\n        if (!data) return\n\n        dispatch(caseNumbersDataUpdateData(data))\n    }, [data, dispatch])\n\n    useEffect(() => {\n        if (!caseNumbersData.length) {\n            runCaseNumbersQuery({\n                readQuery: caseNumbersQuery,\n            })\n            return\n        }\n\n        const rows = caseNumbersData.map((currentDataProp, idx) => {\n            const currentKeys = Object.keys(\n                currentDataProp\n            ) as CaseNumbersDataKey[]\n            const updatedObj = currentKeys.reduce(\n                (accumObj: Record<RowPropType, string>, currentKey) => {\n                    accumObj[currentKey] = currentDataProp[currentKey].value\n                    return accumObj\n                },\n                {} as Record<RowPropType, string>\n            )\n\n            updatedObj.id = idx.toString()\n\n            return updatedObj\n        })\n\n        setCaseNumbersRows(rows)\n    }, [caseNumbersData, runCaseNumbersQuery])\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>Error getting data...</div>\n\n    return (\n        <>\n            <CaseNumbersTable rows={caseNumbersRows} columns={columns} />\n            <Link component={RouterLink} to=\"/heatmap\">\n                Heatmap\n            </Link>\n        </>\n    )\n}\n\nexport default HomePage\n","import Layout from 'components/Layout'\nimport { generateRoutes, RouteType } from 'helpers/routeHelpers'\nimport HeatMapPage from 'pages/HeatmapPage'\nimport HomePage from 'pages/HomePage'\n\nexport const mainRoutes: RouteType[] = [\n    {\n        path: '/heatmap',\n        exact: true,\n        childComponent: () => <HeatMapPage />,\n    },\n    {\n        path: ['/', '/home'],\n        exact: true,\n        childComponent: () => (\n            <Layout>\n                <HomePage />\n            </Layout>\n        ),\n    },\n]\n\nexport const mainRouting = generateRoutes(mainRoutes)\n","import React from 'react'\n\nconst NotFoundPage = () => {\n    return <div>Oops! 404.</div>\n}\n\nexport default NotFoundPage\n","import { mainRouting } from 'mainRouting'\nimport NotFoundPage from 'pages/NotFoundPage'\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nconst App = () => {\n    return (\n        <Switch>\n            {mainRouting().map(({ ChildComponent, computedPath, ...rest }) => (\n                <Route path={computedPath} {...rest}>\n                    <ChildComponent />\n                </Route>\n            ))}\n            <Route>\n                <NotFoundPage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default App\n","import { CombinedState, combineReducers } from 'redux'\nimport { IAppState } from './appTypes'\nimport { caseNumbersReducer } from './caseNumbers/reducers'\n\nexport const appReducer = combineReducers<IAppState>({\n    caseNumbersData: caseNumbersReducer,\n})\n\nexport type AppState = CombinedState<IAppState>\n","import { CaseNumbersDataKey } from 'pages/HomePage/components/CaseNumbersTable'\nimport { DataProps } from 'stardog/useQuery'\nimport { CaseNumbersDataActionTypes, CaseNumbersDataUpdate } from './types'\n\nexport const caseNumbersReducer = (\n    state = [] as Record<CaseNumbersDataKey, DataProps>[],\n    action: CaseNumbersDataActionTypes\n): Record<CaseNumbersDataKey, DataProps>[] => {\n    switch (action.type) {\n        case CaseNumbersDataUpdate:\n            return action.caseNumbersData\n        default:\n            return state\n    }\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\nimport { appReducer, AppState } from './appState'\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n    }\n}\n\nconst middlewares = [reduxImmutableStateInvariant()]\n\nconst configureStore = (initialState?: AppState) => {\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n    return createStore(\n        appReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(...middlewares))\n    )\n}\n\nexport default configureStore\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nexport const baseThemeOverride = responsiveFontSizes(\n    createMuiTheme({\n        typography: {\n            button: {\n                textTransform: 'unset',\n            },\n        },\n    })\n)\n","import React from 'react'\n\nconst ForbiddenPage = () => {\n    return <div>You are forbidden!</div>\n}\n\nexport default ForbiddenPage\n","import React, { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport ForbiddenPage from '../pages/ForbiddenPage'\nimport NotFoundPage from '../pages/NotFoundPage'\n\nconst RouterConfig: FC = ({ children }) => {\n    const location = useLocation()\n\n    if ((location?.state as any)?.notFound) {\n        return <NotFoundPage />\n    }\n\n    if ((location?.state as any)?.forbidden) {\n        return <ForbiddenPage />\n    }\n\n    return <>{children}</>\n}\n\nexport default RouterConfig\n","import CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport React, { FC } from 'react'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport configureStore from 'reduxConfig/configureStore'\nimport { StardogProvider } from 'stardog/StardogContext'\nimport { baseThemeOverride } from './baseThemeOverride'\nimport RouterConfig from './RouterConfig'\n\nexport const store = configureStore()\n\nconst AppConfig: FC = ({ children }) => {\n    return (\n        <ReduxProvider store={store}>\n            <StardogProvider\n                dbName=\"covid19nyt\"\n                username=\"anonymous\"\n                password=\"anonymous\"\n                endpoint=\"https://express.stardog.cloud:5820\"\n            >\n                <HashRouter>\n                    <RouterConfig>\n                        <CssBaseline />\n                        <ThemeProvider theme={baseThemeOverride}>\n                            {children}\n                        </ThemeProvider>\n                    </RouterConfig>\n                </HashRouter>\n            </StardogProvider>\n        </ReduxProvider>\n    )\n}\n\nexport default AppConfig\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport AppConfig from './configuration/AppConfig'\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppConfig>\n            <App />\n        </AppConfig>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}